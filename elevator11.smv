MODULE main

VAR
button1: boolean;
button2: boolean; 
button3: boolean;
upF1: boolean;
upF2: boolean;
downF2: boolean;
downF3: boolean;
buttonOpen: boolean;
buttonClose: boolean;
move_cmd : {stop, move_up, move_down, nop};
floor  : {1,2,3};
direction : {standing, moving_up, moving_down};
door : {open, closed};

ASSIGN
    init(direction) := standing;
    next(direction) := case
        floor = 3 & move_cmd = move_up : standing;
        floor = 1 & move_cmd = move_down : standing;
        move_cmd = stop      : standing;
        move_cmd = move_up   : moving_up;
        move_cmd = move_down : moving_down;
        move_cmd = nop       : direction;
    esac;

    next(floor) := case
        next(direction) = standing    : floor;
        next(direction) = moving_up   : case 
                                      floor = 3 : 3;
                                      TRUE      : floor + 1; 
                                      esac;
        next(direction) = moving_down : case 
                                      floor = 1 : 1;
                                      TRUE      : floor - 1; 
                                      esac;
    esac;
    next(move_cmd) := case
        door = open         : nop;
        (floor = 1 & button1) | (floor = 2 & button2) | (floor = 3 & button3) : stop;   
        (floor = 1 & ( button2 | button3 | upF1)) | (floor = 2 & (button3 | upF2)) : move_up;
        (floor = 3 & ( button1 | button2 | downF3)) | (floor = 2 & (button1 | downF2)) : move_down;
        TRUE : nop;
        esac;
    next(door) := case
        direction != standing                     : closed;
        move_cmd = stop & door = closed & buttonOpen : open;
        move_cmd = stop & door = open & buttonClose : closed;
        (move_cmd = move_up | move_cmd = move_down) & door = open   : closed;
        TRUE:closed;
        esac;





